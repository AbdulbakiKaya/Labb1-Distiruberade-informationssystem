/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.53.v20231009
 * Generated at: 2025-10-02 19:18:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import se.kth.webshop.model.Cart;
import se.kth.webshop.model.CartItem;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("se.kth.webshop.model.Cart");
    _jspx_imports_classes.add("se.kth.webshop.model.CartItem");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"sv\">\n");
      out.write("<head><meta charset=\"UTF-8\"><title>Kundkorg</title></head>\n");
      out.write("<body>\n");

  String user = (String) session.getAttribute("USER");
  Cart cart = (Cart) request.getAttribute("cart");

      out.write("\n");
      out.write("\n");
      out.write("<h1>Kundkorg</h1>\n");
      out.write("<p>Användare: ");
      out.print( (user != null ? user : "Ej inloggad") );
      out.write("</p>\n");
      out.write("<p>\n");
      out.write("  <a href=\"");
      out.print( request.getContextPath() );
      out.write("/products\">Fortsätt handla</a>\n");
      out.write("  ");
 if (user == null) { 
      out.write(" | <a href=\"");
      out.print( request.getContextPath() );
      out.write("/login\">Logga in</a> ");
 } 
      out.write("\n");
      out.write("</p>\n");
      out.write("\n");
 if (cart == null || cart.isEmpty()) { 
      out.write("\n");
      out.write("  <p>Din kundkorg är tom.</p>\n");
 } else { 
      out.write("\n");
      out.write("  <table border=\"1\" cellpadding=\"6\">\n");
      out.write("    <tr><th>Produkt</th><th>Antal</th><th>Rad-summa</th><th></th></tr>\n");
      out.write("    ");
 for (CartItem ci : cart.getItems()) { 
      out.write("\n");
      out.write("      <tr>\n");
      out.write("        <td>");
      out.print( ci.getProduct().getName() );
      out.write("</td>\n");
      out.write("        <td>");
      out.print( ci.getQuantity() );
      out.write("</td>\n");
      out.write("        <td>");
      out.print( String.format("%.2f", ci.getLineTotal()) );
      out.write(" kr</td>\n");
      out.write("        <td>\n");
      out.write("          <form method=\"post\" action=\"");
      out.print( request.getContextPath() );
      out.write("/cart\" style=\"display:inline;\">\n");
      out.write("            <input type=\"hidden\" name=\"action\" value=\"removeAll\">\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( ci.getProduct().getId() );
      out.write("\">\n");
      out.write("            <button type=\"submit\">Ta bort</button>\n");
      out.write("          </form>\n");
      out.write("        </td>\n");
      out.write("      </tr>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    <tr>\n");
      out.write("      <td colspan=\"2\" style=\"text-align:right;\"><strong>Totalt:</strong></td>\n");
      out.write("      <td colspan=\"2\"><strong>");
      out.print( String.format("%.2f", cart.getTotal()) );
      out.write(" kr</strong></td>\n");
      out.write("    </tr>\n");
      out.write("  </table>\n");
      out.write("\n");
      out.write("  ");
 if (user != null) { 
      out.write("\n");
      out.write("    <p><em>(Senare: “Till kassa” → order/transaction)</em></p>\n");
      out.write("    <form method=\"post\" action=\"");
      out.print( request.getContextPath() );
      out.write("/logout\">\n");
      out.write("      <button type=\"submit\">Logga ut</button>\n");
      out.write("    </form>\n");
      out.write("  ");
 } 
      out.write('\n');
 } 
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
